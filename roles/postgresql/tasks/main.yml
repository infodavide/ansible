# tasks file
#----------------------------------------------------------------------------------
# packages <=======================================================================
#----------------------------------------------------------------------------------
- name: Installing packages
  package: name={{item}} state=present
  with_items:
  - acl
  - openssl
  - postgresql-all
  - python-psycopg2
  tags:
  - postgresql

#----------------------------------------------------------------------------------
# profile <========================================================================
#----------------------------------------------------------------------------------
- name: Setting path to the PostgreSQL data directory
  lineinfile:
    path: /etc/profile
    regexp: "^export PGDATA="
    line: "export PGDATA={{ db_data_dir }}"
  tags:
  - postgresql

#----------------------------------------------------------------------------------
# PostgreSQL <=========================================================================
#----------------------------------------------------------------------------------
- name: Ensuring the PostgreSQL service is stopped
  service: name=postgresql state=stopped
  ignore_errors: True
  tags:
  - always

- name: Ensuring the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes
  tags:
  - postgresql

- name: Ensuring database is created
  become: true
  become_user: postgres
  postgresql_db: name={{ item.name }} encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template='template0' state=present
  with_items: "{{ databases }}"
  tags:
  - postgresql

- name: Ensuring user has access to the database
  become: true
  become_user: postgres
  postgresql_user: db={{ item.name }} name={{ item.user }} password={{ item.password }} encrypted=yes priv=ALL state=present
  with_items: "{{ databases }}"
  tags:
  - postgresql

- name: Ensuring user does not have unnecessary privileges
  become: true
  become_user: postgres
  postgresql_user: name={{ item.user }} role_attr_flags=NOSUPERUSER,NOCREATEDB state=present
  with_items: "{{ databases }}"
  tags:
  - postgresql

- name: Enabling extensions
  become: true
  become_user: postgres
  postgresql_ext: name={{ item.name }} db={{ item.database }} state=present
  with_items: "{{ extensions }}"
  tags:
  - postgresql
