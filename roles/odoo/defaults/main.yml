---
# User and group vars
odoo_user: odoo
odoo_group: odoo
# VirtualEnv vars
python_version: "3.7.7"
venv_name: "odoo"
odoo_venv_path: "/opt/{{odoo_user}}/pyenv/versions/{{venv_name}}/"
# Odoo releases download strategy: tar or git
download_strategy: git
# Vars for tar download strategy
# supported any other formats supported by ansible unarchive, i.e. by unzip or gtar)
# Releases from Odoo.com odoo nightly
odoo_version: "14.0" # not used outside this file
odoo_release: 20190505 # not used outside this file
odoo_url: "https://nightly.odoo.com/{{odoo_version}}/nightly/src/odoo_{{odoo_version}}.{{odoo_release}}.tar.gz"
# Releases from an Odoo comunity backports updated fork
# odoo_url: "https://gitlab.com/coopdevs/OCB/-/archive/{{odoo_release}}/OCB-{{odoo_release}}.tar.gz"
odoo_download_path: "/tmp/odoo_{{odoo_version}}.{{odoo_release}}.tar.gz"
# Vars for git download strategy
odoo_git_url: "https://github.com/OCA/OCB.git"
odoo_git_ref: "14.0"
odoo_path: /opt/odoo
odoo_bin_path: "{{odoo_path}}/odoo-bin"
odoo_python_path: "{{odoo_venv_path}}/bin/python"
odoo_config_path: /etc/odoo
odoo_modules_path: /opt/odoo_modules
odoo_log_path: /var/log/odoo
odoo_log_level: info
# Read odoo_db_name or default to odoo. To deprecate the var, delete the active line and uncomment the one below this one.
# odoo_dbs: [ "{{odoo}}" ]
odoo_dbs: [ "{{odoo_db_name | default('odoo')}}" ]
test_dbs: []
db_port: 5432
# This not a DB user password, but a password for Odoo to deal with DB.
odoo_db_admin_password: iT0ohDuoth6ONgahDeepaich0aeka5ul
# Give the chance to select a database before login not filtered out by dbfilter, and enable db manager web interface.
# In multi db mode, this is only relevant to db manager, as we force list_db to avoid an unaccessible website when dbfilter is disabled.
# In single db mode,we disable dbfilter and respect list_db.
list_db: False
# Security option that disables the web-base database manager and filters available DBs to list before login.
# We ignore this setting in single DB mode to allow simpler db names such as "odoo" instead of domain name.
dbfilter_enabled: True
# Comma-separated list of modules to install before running the server
odoo_core_modules: "base"
# path of where to find the community modules requirements.txt
community_modules_requirements_path: "{{inventory_dir}}/../files/requirements.txt"
odoo_daemon: "odoo.service"
# Whether to populate db with example data or not.
demo_data: false
# Start the server in development mode: https://www.odoo.com/documentation/12.0/reference/cmdline.html#developer-features
dev_mode: false
# HTTP server settings
odoo_http_interface: "127.0.0.1"
odoo_proxy_mode: true
# Support for rest-framework/base_rest: https://github.com/OCA/rest-framework/tree/12.0/base_rest
enabled_rest_framework: false
# Support for Queue Job https://github.com/OCA/queue/blob/12.0/queue_job
enable_queue_job: false
# Support for Dbfilter From Header https://github.com/OCA/server-tools/tree/12.0/dbfilter_from_header
enable_dbfilter_from_header: false
# Customize the Odoo timeouts
limit_time_cpu: 60
limit_time_real: 120
# Force getting db name from leftmost subdomain (different inventories for each DB)
force_leftmost_subdomain: false
# Sessions path: data_dir/sessions
# https://github.com/OCA/OCB/blob/12.0/odoo/tools/appdirs.py#L48
odoo_sessions_path: "/opt/{{odoo_user}}/.local/share/Odoo/sessions"
remove_sessions: false
odoo_community_modules: ""
enable_sentry: false
# Overwrites existing translation terms on updating a module or importing a CSV or a PO file using the option --i18n-overwrite in the module update.
# https://www.odoo.com/documentation/12.0/developer/reference/cmdline.html#cmdoption-odoo-bin-i18n-overwrite
i18n_overwrite: false
logrotate_odoo:
  - path: odoo
    conf: |
      /var/log/odoo/odoo.log {
             weekly
             rotate 20
             size 300M
             compress
             delaycompress
      }
