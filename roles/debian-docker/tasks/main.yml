#----------------------------------------------------------------------------------
# docker <=========================================================================
#----------------------------------------------------------------------------------
- name: Copying configuration
  copy:
    src: files/etc/
    dest: /etc/
    owner: root
    group: root
    mode: 0664
  tags:
  - install
  - update

- name: Setting scripts permissions
  shell: "chmod 777 /etc/admin/*.sh"
  ignore_errors: True
  args:
    warn: no
  tags:
  - install
  - update

- name: Installing packages
  package: name={{item}} state=present
  with_items:
  - curl
  - ca-certificates
  - software-properties-common
  - apt-transport-https
  - apt-utils
  - apt
  - aptitude-common
  - aptitude
  - gnupg
  notify: cleaning_packages_metadata
  tags:
  - install
  - docker

- name: Configuring keyrings
  shell: "install -m 0755 -d /etc/apt/keyrings"
  ignore_errors: False
  args:
    warn: no
  tags:
  - install

- name: Delete existing docker repository signature
  file:
    state: absent
    path: /etc/apt/keyrings/docker.gpg
  tags:
  - install
  - docker

- name: Downloading docker repository signature
  shell: "curl --connect-timeout 5 -fsSL {{docker_repository_gpg_url}} | gpg --dearmor -o /etc/apt/keyrings/docker.gpg"
  ignore_errors: False
  args:
    warn: no
  tags:
  - install
  - docker

- name: Configuring of docker repository signature
  shell: "chmod a+r /etc/apt/keyrings/docker.gpg"
  ignore_errors: False
  args:
    warn: no
  tags:
  - install
  - docker

- name: Adding docker repository
  shell: 'echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] {{docker_repository_url}} "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null'
  ignore_errors: False
  args:
    warn: no
  tags:
  - install
  - docker

- name: Updating repositories
  shell: apt-get update -y
  ignore_errors: False
  args:
    warn: no
  tags:
  - install
  - docker

- name: Installing docker packages
  package: name={{item}} state=present
  with_items:
  - docker-ce
  - docker-ce-rootless-extras
  - docker-ce-cli
  - containerd.io
  - docker-buildx-plugin
  - docker-compose-plugin
  - docker-compose
  - python3-docker
  - python3-dockerpty
  - python3-dockerpycreds
  notify: cleaning_packages_metadata
  tags:
  - install
  - docker

- name: Ensuring group docker exists
  ansible.builtin.group:
    name: docker
    state: present
  tags:
  - install
  - docker
  - update

- name: Starting docker service
  systemd: enabled=yes state=restarted daemon_reload=yes name={{item}}
  with_items:
  - docker
  tags:
  - install
  - docker
  - update

- name: Testing docker
  shell: "docker version"
  ignore_errors: False
  args:
    warn: no
  tags:
  - install
  - docker
